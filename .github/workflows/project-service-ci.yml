name: CI Project Service Workflow

on:
  push:
    branches:
      - '*'
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: project_service_test
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U root" --health-interval=10s --health-timeout=5s --health-retries=5

      mailhog:
        image: mailhog/mailhog
        ports:
          - 1025:1025 # SMTP server for sending emails
          - 8025:8025 # Web UI for viewing emails

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd services/project-service
          npm install

      - name: Generate JWT Secrets
        run: |
          cd services/project-service
          npm run generate:jwt

      - name: Ensure `.env` is configured correctly
        run: |
          cd services/project-service
          cp .env.test .env  # Prisma requires .env, not .env.test
          sed -i "s|REPLACE_WITH_JWT_SECRET|$(cat config/jwt/JWT_SECRET)|g" .env
          sed -i "s|REPLACE_WITH_JWT_REFRESH_SECRET|$(cat config/jwt/JWT_REFRESH_SECRET)|g" .env
          echo "✅ JWT secrets replaced in .env"

      - name: Wait for PostgreSQL and MailHog to be ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U root && echo "✅ PostgreSQL is ready" && break
            echo "⏳ Waiting for PostgreSQL..."
            sleep 5
          done

          for i in {1..10}; do
            nc -z localhost 1025 && echo "✅ MailHog is ready" && break
            echo "⏳ Waiting for MailHog..."
            sleep 5
          done

      - name: Set up Prisma (Force Load `.env`)
        run: |
          cd services/project-service
          export $(grep -v '^#' .env | xargs)
          npx prisma generate
          npx prisma migrate dev --name init --preview-feature
          echo "✅ Prisma setup completed"

      - name: Run ESLint
        run: |
          cd services/project-service
          npm run lint

      - name: Run Tests with Code Coverage
        run: |
          cd services/project-service
          export $(grep -v '^#' .env | xargs)
          npm run test:coverage

      - name: Build the project
        run: |
          cd services/project-service
          npm run build
