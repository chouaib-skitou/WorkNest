@use 'sass:color';
@use 'variables' as vars;

// Flexbox mixin
@mixin flex($justify: flex-start, $align: center, $gap: 0, $direction: row) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  flex-direction: $direction;
  @if $gap > 0 {
    gap: $gap;
  }
}

// Button mixin
@mixin button-base {
  padding: vars.$spacing-sm vars.$spacing-base;
  border-radius: vars.$border-radius-md;
  font-size: vars.$font-size-md;
  font-weight: vars.$font-weight-medium;
  cursor: pointer;
  @include flex(center, center, vars.$spacing-xs);
  transition: vars.$transition-fast;
}

// Primary button mixin
@mixin button-primary($bg-color, $text-color: white, $hover-lightness: -3%) {
  @include button-base;
  background-color: $bg-color;
  color: $text-color;
  border: 1px solid rgba(27, 31, 36, 0.15);

  &:hover:not(:disabled) {
    background-color: color.adjust($bg-color, $lightness: $hover-lightness);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Secondary button mixin
@mixin button-secondary {
  @include button-base;
  background-color: vars.$background-light;
  color: vars.$text-color;
  border: 1px solid rgba(27, 31, 36, 0.15);

  &:hover {
    background-color: #f3f4f6;
  }
}

// Icon button mixin
@mixin button-icon(
  $padding: vars.$spacing-xs vars.$spacing-sm,
  $font-size: inherit
) {
  padding: $padding;
  color: vars.$text-light;
  background: none;
  border: none;
  border-radius: vars.$border-radius-sm;
  cursor: pointer;
  font-size: $font-size;

  &:hover {
    color: vars.$text-color;
    background: vars.$background-light;
  }
}

// Form control mixin
@mixin form-control {
  width: 100%;
  padding: vars.$spacing-md;
  font-size: vars.$font-size-md;
  border: 1px solid vars.$border-color;
  border-radius: vars.$border-radius-md;
  background-color: vars.$background-light;
  color: vars.$text-color;
  transition: vars.$transition-fast;

  &:focus {
    outline: none;
    border-color: vars.$primary-color;
    box-shadow: 0 0 0 3px rgba(vars.$primary-color, 0.3);
    background-color: vars.$background-white;
  }

  &.invalid {
    border-color: vars.$error-color;
    &:focus {
      box-shadow: 0 0 0 3px rgba(vars.$error-color, 0.3);
    }
  }

  &::placeholder {
    color: color.adjust(vars.$text-color, $lightness: 40%);
  }
}

// Card mixin
@mixin card {
  background-color: vars.$background-white;
  border: 1px solid vars.$border-color;
  border-radius: vars.$border-radius-lg;
  box-shadow: 0 1px 2px vars.$shadow-color;
}

// Status badge mixin
@mixin status-badge($bg-color, $text-color) {
  padding: vars.$spacing-xs vars.$spacing-sm;
  background-color: rgba($bg-color, 0.15);
  color: $text-color;
  border-radius: vars.$border-radius-full;
  font-size: vars.$font-size-sm;
  font-weight: vars.$font-weight-semibold;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

// Responsive mixin
@mixin responsive($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: vars.$breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: vars.$breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: vars.$breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: vars.$breakpoint-xl) {
      @content;
    }
  }
}

// Spinner mixin
@mixin spinner($size: 40px, $border-width: 4px, $color: vars.$primary-color) {
  width: $size;
  height: $size;
  border: $border-width solid rgba($color, 0.1);
  border-radius: 50%;
  border-top-color: $color;
  animation: spin 1s linear infinite;
}
