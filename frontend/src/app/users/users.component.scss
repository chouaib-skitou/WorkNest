@use '../shared/styles/variables' as vars;
@use '../shared/styles/mixins';
@use 'sass:color';

// Container
.users-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: vars.$spacing-xl;
  margin-top: 64px;
  position: relative;

  @include mixins.responsive(md) {
    padding: vars.$spacing-base;
  }
}

// Header Section
.header-section {
  @include mixins.flex(space-between, center);
  margin-bottom: vars.$spacing-xl;

  h1 {
    font-size: vars.$font-size-3xl;
    margin: 0;
    color: vars.$text-color;
    font-weight: vars.$font-weight-semibold;

    @include mixins.responsive(md) {
      font-size: vars.$font-size-2xl;
    }
  }

  .create-button {
    display: flex;
    align-items: center;
    gap: vars.$spacing-sm;
    padding: vars.$spacing-md vars.$spacing-xl;
    background-color: vars.$secondary-color;
    color: white;
    border: none;
    border-radius: vars.$border-radius-md;
    font-weight: vars.$font-weight-medium;
    cursor: pointer;
    transition: vars.$transition-normal;
    box-shadow: 0 2px 4px vars.$shadow-color;

    &:hover {
      background-color: color.adjust(vars.$secondary-color, $lightness: -10%);
      transform: translateY(-2px);
      box-shadow: 0 4px 8px vars.$shadow-color;
    }

    i {
      font-size: vars.$font-size-base;
    }

    @include mixins.responsive(md) {
      width: 100%;
      justify-content: center;
      margin-top: vars.$spacing-base;
    }
  }

  @include mixins.responsive(md) {
    flex-direction: column;
    align-items: flex-start;
  }
}

// Filters
.filters-container {
  @include mixins.flex(flex-start, center, vars.$spacing-base);
  margin-bottom: vars.$spacing-xl;
  flex-wrap: wrap;

  .search-container {
    flex: 1;
    min-width: 300px;
    position: relative;

    .search-icon {
      position: absolute;
      right: vars.$spacing-base;
      top: 50%;
      transform: translateY(-50%);
      color: vars.$text-light;
      pointer-events: none;
    }
  }

  .role-filter-container {
    width: 180px;
    min-width: 180px;
  }

  .search-input {
    width: 100%;
    padding: vars.$spacing-md vars.$spacing-base;
    padding-right: vars.$spacing-xl;
    border: 1px solid vars.$border-color;
    border-radius: vars.$border-radius-lg;
    font-size: vars.$font-size-base;
    transition: vars.$transition-normal;
    background-color: white;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);

    &:focus {
      outline: none;
      border-color: vars.$primary-color;
      box-shadow: 0 0 0 3px rgba(vars.$primary-color, 0.1);
    }

    &::placeholder {
      color: color.adjust(vars.$text-color, $lightness: 40%);
    }

    @include mixins.responsive(md) {
      min-width: 100%;
    }
  }

  .filter-select {
    width: 100%;
    padding: vars.$spacing-md vars.$spacing-xl vars.$spacing-md vars.$spacing-base;
    border: 1px solid vars.$border-color;
    border-radius: vars.$border-radius-lg;
    font-size: vars.$font-size-base;
    background-color: white;
    cursor: pointer;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23333' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 0.5rem center;
    background-size: 1.2em;
    transition: vars.$transition-normal;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);

    &:focus {
      outline: none;
      border-color: vars.$primary-color;
      box-shadow: 0 0 0 3px rgba(vars.$primary-color, 0.1);
    }

    @include mixins.responsive(md) {
      min-width: 100%;
    }
  }

  @include mixins.responsive(md) {
    flex-direction: column;
    gap: vars.$spacing-sm;
    
    .search-container, .role-filter-container {
      width: 100%;
    }
  }
}

// Loading indicator
.loading-indicator {
  @include mixins.flex(center, center, 0, column);
  padding: vars.$spacing-3xl;
  background-color: white;
  border-radius: vars.$border-radius-xl;
  box-shadow: 0 4px 6px vars.$shadow-color;
  margin: vars.$spacing-xl 0;

  .spinner {
    @include mixins.spinner(40px, 3px, vars.$primary-color);
    margin-bottom: vars.$spacing-base;
  }

  p {
    color: color.adjust(vars.$text-color, $lightness: 20%);
    font-size: vars.$font-size-lg;
  }
}

// Table container
.table-container {
  background-color: vars.$background-white;
  border-radius: vars.$border-radius-lg;
  box-shadow: 0 4px 6px vars.$shadow-color;
  overflow: hidden;
  margin-bottom: vars.$spacing-xl;

  table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;

    th, td {
      padding: vars.$spacing-md vars.$spacing-base;
      text-align: left;
      border-bottom: 1px solid vars.$border-color;
    }

    th {
      background-color: vars.$background-light;
      font-weight: vars.$font-weight-semibold;
      color: vars.$text-color;
      font-size: vars.$font-size-md;
    }

    td {
      font-size: vars.$font-size-md;
      color: vars.$text-color;
      vertical-align: middle;
    }

    tr:last-child td {
      border-bottom: none;
    }

    tr:hover td {
      background-color: color.adjust(vars.$background-light, $lightness: 1%);
    }
  }

  .user-name {
    font-weight: vars.$font-weight-medium;
  }

  .user-email {
    color: vars.$text-light;
  }

  .actions-cell {
    @include mixins.flex(flex-end, center, vars.$spacing-sm);
  }

  .action-button {
    @include mixins.button-icon;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    @include mixins.flex(center, center);

    &.edit {
      color: vars.$primary-color;
      background-color: rgba(vars.$primary-color, 0.1);

      &:hover {
        background-color: rgba(vars.$primary-color, 0.2);
      }
    }

    &.delete {
      color: vars.$error-color;
      background-color: rgba(vars.$error-color, 0.1);

      &:hover {
        background-color: rgba(vars.$error-color, 0.2);
      }
    }
  }

  @include mixins.responsive(md) {
    overflow-x: auto;
  }
}

// Role badge
.role-badge {
  display: inline-block;
  padding: vars.$spacing-xs vars.$spacing-sm;
  border-radius: vars.$border-radius-full;
  font-size: vars.$font-size-xs;
  font-weight: vars.$font-weight-semibold;
  text-transform: uppercase;
  letter-spacing: 0.5px;

  &.role_employee {
    background-color: rgba(vars.$primary-color, 0.15);
    color: color.adjust(vars.$primary-color, $lightness: -20%);
  }

  &.role_manager {
    background-color: rgba(vars.$secondary-color, 0.15);
    color: color.adjust(vars.$secondary-color, $lightness: -20%);
  }

  &.role_admin {
    background-color: rgba(vars.$warning-color, 0.15);
    color: color.adjust(vars.$warning-color, $lightness: -20%);
  }
}

// Status badge
.status-badge {
  display: inline-block;
  padding: vars.$spacing-xs vars.$spacing-sm;
  border-radius: vars.$border-radius-full;
  font-size: vars.$font-size-xs;
  font-weight: vars.$font-weight-semibold;
  text-transform: uppercase;
  letter-spacing: 0.5px;

  &.verified {
    background-color: rgba(vars.$success-color, 0.15);
    color: color.adjust(vars.$success-color, $lightness: -20%);
  }

  &.not-verified {
    background-color: rgba(vars.$error-color, 0.15);
    color: color.adjust(vars.$error-color, $lightness: -20%);
  }
}

// No results
.no-results {
  @include mixins.flex(center, center, vars.$spacing-sm, column);
  padding: vars.$spacing-3xl;
  background-color: vars.$background-white;
  border-radius: vars.$border-radius-lg;
  box-shadow: 0 4px 6px vars.$shadow-color;
  margin: vars.$spacing-xl 0;
  text-align: center;

  i {
    font-size: vars.$font-size-3xl;
    color: vars.$text-light;
    margin-bottom: vars.$spacing-base;
  }

  h3 {
    font-size: vars.$font-size-xl;
    color: vars.$text-color;
    margin: 0 0 vars.$spacing-sm 0;
  }

  p {
    color: vars.$text-light;
    margin-bottom: vars.$spacing-lg;
  }

  .reset-button {
    padding: vars.$spacing-sm vars.$spacing-xl;
    background-color: vars.$background-light;
    border: 1px solid vars.$border-color;
    border-radius: vars.$border-radius-md;
    color: vars.$text-color;
    cursor: pointer;
    transition: vars.$transition-normal;

    &:hover {
      background-color: vars.$background-white;
      border-color: vars.$primary-color;
      color: vars.$primary-color;
    }
  }
}

// Pagination
.pagination {
  @include mixins.flex(center, center, vars.$spacing-base);
  margin-top: vars.$spacing-xl;

  .pagination-button {
    @include mixins.flex(center, center, vars.$spacing-sm);
    padding: vars.$spacing-sm vars.$spacing-lg;
    background-color: white;
    border: 1px solid vars.$border-color;
    border-radius: vars.$border-radius-md;
    color: vars.$text-color;
    font-weight: vars.$font-weight-medium;
    cursor: pointer;
    transition: vars.$transition-normal;

    &:hover:not(:disabled) {
      border-color: vars.$primary-color;
      color: vars.$primary-color;
      background-color: rgba(vars.$primary-color, 0.05);
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    i {
      font-size: 0.8rem;
    }
  }

  .page-numbers {
    @include mixins.flex(center, center, vars.$spacing-sm);
  }

  .page-number {
    width: 36px;
    height: 36px;
    @include mixins.flex(center, center);
    border: 1px solid vars.$border-color;
    background-color: white;
    border-radius: vars.$border-radius-md;
    color: vars.$text-color;
    font-weight: vars.$font-weight-medium;
    cursor: pointer;
    transition: vars.$transition-normal;

    &:hover:not(.active) {
      border-color: vars.$primary-color;
      color: vars.$primary-color;
      background-color: rgba(vars.$primary-color, 0.05);
    }

    &.active {
      background-color: vars.$primary-color;
      color: white;
      border-color: vars.$primary-color;
    }
  }

  @include mixins.responsive(md) {
    flex-direction: column;

    .pagination-button {
      width: 100%;
      justify-content: center;
    }

    .page-numbers {
      flex-wrap: wrap;
      justify-content: center;
    }
  }
}

// Password input container
.password-input-container {
  position: relative;

  input {
    width: 100%;
    padding-right: vars.$spacing-xl;
  }

  .password-toggle {
    position: absolute;
    right: vars.$spacing-sm;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: vars.$text-light;
    cursor: pointer;
    padding: vars.$spacing-xs;
    border-radius: vars.$border-radius-sm;

    &:hover {
      color: vars.$text-color;
      background-color: vars.$background-light;
    }
  }
}

// Modal styles
.modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: vars.$z-index-modal;
  animation: fadeIn 0.2s ease;
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: vars.$z-index-modal-content;
  display: none;
  align-items: center;
  justify-content: center;
  padding: vars.$spacing-md;

  &.show {
    display: flex;
    animation: fadeIn 0.2s ease;
  }

  .modal-content {
    position: relative;
    background-color: white;
    border-radius: vars.$border-radius-md;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 500px;
    max-height: calc(100vh - 2rem);
    overflow-y: auto;
    animation: slideUp 0.3s ease;

    &.delete-modal {
      max-width: 400px;
    }
  }

  .modal-header {
    padding: vars.$spacing-md vars.$spacing-lg;
    border-bottom: 1px solid vars.$border-color;
    display: flex;
    justify-content: space-between;
    align-items: center;

    h2 {
      font-size: vars.$font-size-lg;
      font-weight: vars.$font-weight-semibold;
      margin: 0;
      color: vars.$text-color;
    }

    .close-button {
      background: none;
      border: none;
      color: vars.$text-light;
      font-size: vars.$font-size-lg;
      cursor: pointer;

      &:hover {
        color: vars.$text-color;
      }
    }
  }

  .modal-body {
    padding: vars.$spacing-lg;

    .form-group {
      margin-bottom: vars.$spacing-lg;

      label {
        display: block;
        margin-bottom: vars.$spacing-xs;
        font-size: vars.$font-size-md;
        font-weight: vars.$font-weight-medium;

        .required {
          color: vars.$error-color;
          margin-left: vars.$spacing-xs;
        }

        small {
          font-weight: vars.$font-weight-normal;
          color: vars.$text-light;
        }
      }

      input, select {
        width: 100%;
        padding: vars.$spacing-md;
        border: 1px solid vars.$border-color;
        border-radius: vars.$border-radius-md;
        font-size: vars.$font-size-md;
        background-color: white;

        &:focus {
          outline: none;
          border-color: vars.$primary-color;
          box-shadow: 0 0 0 2px rgba(vars.$primary-color, 0.1);
        }

        &.invalid {
          border-color: vars.$error-color;
        }
      }

      .error-message {
        color: vars.$error-color;
        font-size: vars.$font-size-sm;
        margin-top: vars.$spacing-xs;
      }
    }

    .form-error {
      background-color: rgba(vars.$error-color, 0.1);
      color: vars.$error-color;
      padding: vars.$spacing-md;
      border-radius: vars.$border-radius-md;
      margin-bottom: vars.$spacing-lg;
      display: flex;
      align-items: center;
      gap: vars.$spacing-sm;
    }

    .delete-confirmation {
      text-align: center;
      padding: vars.$spacing-xl 0;

      .warning-icon {
        font-size: 3rem;
        color: vars.$warning-color;
        margin-bottom: vars.$spacing-md;
      }

      p {
        font-size: vars.$font-size-md;
        margin-bottom: vars.$spacing-sm;
        line-height: 1.5;
      }

      .delete-warning {
        color: vars.$error-color;
        margin-top: vars.$spacing-md;
      }
    }
  }

  .form-actions {
    display: flex;
    justify-content: flex-end;
    gap: vars.$spacing-md;
    margin-top: vars.$spacing-xl;
    border-top: 1px solid vars.$border-color;
    padding-top: vars.$spacing-lg;

    button {
      padding: vars.$spacing-sm vars.$spacing-lg;
      border-radius: vars.$border-radius-md;
      font-size: vars.$font-size-md;
      font-weight: vars.$font-weight-medium;
      display: flex;
      align-items: center;
      gap: vars.$spacing-sm;

      i {
        font-size: vars.$font-size-md;
      }
    }

    .cancel-button {
      background-color: white;
      border: 1px solid vars.$border-color;
      color: vars.$text-color;

      &:hover {
        background-color: vars.$background-light;
      }
    }

    .submit-button {
      background-color: vars.$secondary-color;
      border: 1px solid transparent;
      color: white;

      &:hover:not(:disabled) {
        background-color: darken(vars.$secondary-color, 5%);
      }

      &:disabled {
        opacity: 0.7;
        cursor: not-allowed;
      }
    }

    .delete-button {
      background-color: vars.$error-color;
      border: 1px solid transparent;
      color: white;

      &:hover:not(:disabled) {
        background-color: darken(vars.$error-color, 5%);
      }

      &:disabled {
        opacity: 0.7;
        cursor: not-allowed;
      }
    }
  }
}

// Animations
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}